\input texinfo
@setfilename wol.info
@settitle Wake On LAN client
@afourpaper
@finalout
@setcontentsaftertitlepage


@set UPDATED 28 March 2002
@set EDITION 0.6.1
@set VERSION 0.6.1


@comment Tell install-info what to do
@dircategory Net utilities
@direntry
* Wol: (wol).              A Wake On LAN client.
@end direntry


@ifinfo
This file documents wol @value{VERSION}, the Wake On LAN client.

@c man begin COPYRIGHT
Copyright 2001-2002 Thomas Krennwallner @email{krennwallner@@aon.at}

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no
Front-Cover Texts, and with no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@c man end
@end ifinfo


@titlepage
@title wol
@subtitle Wake On LAN client
@subtitle Edition @value{EDITION}
@subtitle @value{UPDATED}
@author Thomas Krennwallner

@ignore
@c man begin SYNOPSIS
wol [@var{OPTION}] @dots{} @var{MAC-ADDRESS} @dots{}
@c man end
@c man begin AUTHOR
Originally written by Thomas Krennwallner <krennwallner@aon.at>.
@c man end
@c man begin SEEALSO
GNU info entry for @file{wol}.
@c man end
@end ignore


@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2002 Thomas Krennwallner @email{krennwallner@@aon.at}

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no
Front-Cover Texts, and with no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@end titlepage


@contents


@node Top, Basics, (dir), (dir)
@top wol - Wake On LAN client

@c man begin DESCRIPTION
This manual gives you an introduction into @code{wol}, the Wake On LAN client.
It remotely turns on computers that supports Magic Packet(TM)
@footnote{Magic Packet is a trademark of Advanced Micro Devices, Inc.}
technology (also known as Wake On LAN).

Some workstations support SecureON(TM) @footnote{SecureON is a trademark of
Digital Equipment Corporation.} password feature. These machines only
wake up if you provide the correct password. @code{wol} also provides this
feature.
@c man end

See @url{http://ahh.sourceforge.net/wol/} for updates and further readings.

This edition documents version @value{VERSION}.

@menu
* Basics::                        Wake On LAN basics
* Description::                   Description
* Options::                       Options to wol
* Examples::                      Examples for program invocation
@end menu


@node Basics, Description, Top, Top
@chapter Basics

This chapter explains the Wake On LAN basics.

@menu
* How does it work::              Technical explanation of Wake On LAN
* Wake On LAN requirements::      What is needed to have Wake On LAN?
* Magic Packet::                  How does a Magic Packet(TM) look like?
@end menu


@node How does it work, Wake On LAN requirements, Basics, Basics
@section How does it work

If you are intending to switch on a computer, you need his @code{MAC address}.
This is the 48 bit hardware address of the network card which is written as
x:x:x:x:x:x, where x is a hexadecimal number between 0 and ff which represents
one byte of the address, which is in network byte order (big-endian).

@code{wol} assembles a hardware address to a Magic Packet(TM) and
sends it over the network. The Wake On LAN enabled computer provides enough
power for the NIC to listen to the attached network and waits for arriving
Wake On LAN packets. The NIC recognizes the wake up call and turns on.


@node Wake On LAN requirements, Magic Packet, How does it work, Basics
@section Wake On LAN requirements

@code{wol} broadcasts so-called Magic Packet(TM) frames across a network to
wake up hardware that understands such packets. These are normally NIC's with
Wake On Lan function. To make use of this feature your motherboard and your
power supply have to support Wake On LAN. But there are still some things
needed to have a working Wake On LAN setup. Most PCI NIC's come with a so-called
WOL-connector and a 3 pin wire. This wire has to be connected from the
motherboards WOL connector to the NIC's. After this basic hardware requirements
you have to enable Wake On LAN in your systems BIOS (or whatever called). If
you have a builtin network card with WOL support, you don't have to wire,
enabling WOL in the BIOS should be enough.


@node Magic Packet, , Wake On LAN requirements, Basics
@section Magic Packet

A Magic Packet(TM) consists of a header (6 bytes of 0xff) and 16 times the
repetition of the MAC address. The optional SecureON(TM) password is attached
at the end of the packet. So if you want to wake up the computer with the
@code{hardware address 00:E0:98:13:45:E2}, the corresponding Magic Packet(TM)
looks like:

@multitable {ff} {ff} {ff} {ff} {ff} {ff}
@item ff @tab ff @tab ff @tab ff @tab ff @tab ff
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@item 00 @tab E0 @tab 98 @tab 13 @tab 45 @tab E2
@end multitable

To simplify things @code{wol} encapsulates such Magic Packets(TM) inside an
UDP packet. This gives various benefits over raw ethernet frames, one is
OS interoperability.


@node Description, Options, Basics, Top
@chapter Description

@code{wol} is a feature rich Wake On LAN utility. Beyond the basic Wake On LAN
function it also provides the ability to send a SecureON(TM) password along
with the Magic Packet(TM). Another useful feature is the capability to read
MAC addresses and the corresponding IP addresses from a file or from standard
input. Along with this file you can optionally specify the corresponding
UDP destination port and a SecureON(TM) password.

An additional AWK script that parses ISC dhcpd's @file{dhcpd.conf} and outputs
in @code{wol's} native fileformat named @code{wol-dhcpdconf} is also provided.
You can invoke it as followed: @code{wol-dhcpdconf < /etc/dhcpd.conf | wol -}.

An example of usage is @code{wol MAC-ADDRESS} which assembles a Magic
Packet(TM) which is intended to wake up the NIC with hardware address
@code{MAC-ADDRESS}. See @ref{Examples} for additional examples.


@node Options
@chapter Options

@c man begin OPTIONS
@table @samp
@item -h
@itemx --help

Print a summary of the command line options and exit.


@item -V
@itemx --version

Print the version number of @code{wol} and exit.


@item -i xxx.xxx.xxx.xxx
@itemx --ipaddr==xxx.xxx.xxx.xxx

Broadcast packet to this IP address. This is important if your wol client is
a multihomed host and you want to send only to one subnet (default IP address
is 255.255.255.255).


@item -p NUM
@itemx --port=NUM

Send packet with this destination port. This option is important, if a packet
filter would block the default destination port 40000.


@item -f FILE
@itemx --file=FILE

Read hardware addresses, IP addresses, optional ports and SecureON(TM)
password from file @file{FILE}. If @file{FILE} is "-", read from stdin.


@item -

Read hardware addresses, IP addresses, optional ports and SecureON(TM)
password from stdin.


@item -v
@itemx --verbose

Turns on verbose output.


@item -w NUM
@itemx --wait=NUM

Waits NUM milliseconds between Magic Packets(TM). Also known as fuse health
pack.


@item -P PASS
@itemx --passwd=PASS

Send a magic packet with SecureON(TM) password feature. PASS is written as
x-x-x-x-x-x, where x is a hexadecimal number between 0 and ff which represents
one byte of the password. To set the password of your SecureON(TM) capable
NIC, you can use ethtool @url{http://www.sourceforge.net/projects/gkernel/}.

@end table
@c man end


@node Examples
@chapter Examples

@c man begin EXAMPLES
@table @samp
@item wol 00:4F:49:07:0B:5F 00:4F:50:06:12:4F

Sends packet addressed to 255.255.255.255:40000 and is intended to wake up
hardware address 00:4F:49:07:0B:5F and 00:4F:50:06:12:4F.


@item wol -i 192.168.3.255 -p 69 00:4F:49:07:0B:5F 

Sends packet addressed to 192.168.3.255:69 and is intended to wake up hardware
address 00:4F:49:07:0B:5F.


@item wol --passwd=09-e6-f5-f3-dc-4e 00:4F:49:07:0B:5F

Sends packet addressed to 255.255.255.255:40000 with SecureON(TM) password
09-e6-f5-f3-dc-4e.


@item wol -f /etc/ethers

Read hardware addresses and corresponding IP addresses from file
@file{/etc/ethers}.

File looks like:

@example
Hardware-Address  IP-Address:Port
Hardware-Address  IP-Address
# Comment
Hardware-Address  IP-Address:Port	SecureON-Password
@end example


@item wol-dhcpdconf < /etc/dhcpd.conf | wol -

@code{wol-dhcpdconf} filters MAC addresses and corresponding IP addresses from
@file{/etc/dhcpd.conf} (config file of ISC dhcpd) and outputs it in macfile
format (native wol format). @code{wol} sends the corresponding
Magic Packets(TM).

A valid dhcp entry:

@example
host hugo
@{
  hardware ethernet 11:ab:e3:5f:7f:8c;
  fixed-address 10.0.0.1;
@}
@end example

@end table
@c man end


@bye
