\input texinfo
@setfilename wol.info
@settitle @code{wol}
@finalout


@ifinfo
This file documents wol, the Wake On LAN client.

Copyright 2001-2002 Thomas Krennwallner @email{krennwallner@@aon.at}

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no
Front-Cover Texts, and with no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@end ifinfo


@set UPDATED 14 February 2002
@set EDITION 0.6.0
@set VERSION 0.6.0

@titlepage
@title wol
@subtitle Wake On LAN client
@subtitle Edition @value{EDITION}, @value{UPDATED}
@author Thomas Krennwallner

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2001-2002 Thomas Krennwallner @email{krennwallner@@aon.at}

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1
or any later version published by the Free Software Foundation;
with no Invariant Sections, with no
Front-Cover Texts, and with no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.
@end titlepage



@node Top, Description, (dir), (dir)
@top @code{wol}


This manual gives you a short introduction into wol, the Wake On LAN client.
See @url{http://ahh.sourceforge.net/wol/} for updates.


@menu
* Description::                   Description
* Options::                       Options to wol
* Examples::                      Examples for program invocation
@end menu



@node Description
@chapter Description

@code{wol} broadcasts so called Magic Packet Frames across a network to wake up 
hardware, that understands such packets. These are normally NIC's with
Wake On Lan function.

@code{wol MAC-ADDRESS} assembles a Wake On Lan packet for hardware address
@code{MAC-ADDRESS}. The hardware address is written as x:x:x:x:x:x, where x is
a hexadeciml number between 0 and ff which represents one byte of the address,
which is in network byte order.



@node Options
@chapter Options

@itemize
@item
-i xxx.xxx.xxx.xxx, --ipaddr=xxx.xxx.xxx.xxx

Broadcast packet to this IP address. This is important if your wol client is
a multihomed host and you want to send only to one subnet (default IP address
is 255.255.255.255).


@item
-p NUM, --port=NUM

Send packet with this destination port. This option is important, if a packet
filter would block the default destination port 40000.

@item
-f FILE, --file=FILE

Read hardware addresses, IP addresses and optional ports and SecureON password
from file FILE. If FILE is "-", read from stdin.

@item
-v, --verbose

Turns on verbose output.

@item
-w NUM, --wait=NUM

Waits NUM milliseconds between magic packets. Also known as fuse health pack.

@item
-P PASS, --passwd=PASS

Send a magic packet with SecureON (TM) password feature found on some Compaq
workstation. PASS is written as x-x-x-x-x-x, where x is a hexadecimal number
between 0 and ff which represents one byte of the password.
@end itemize



@node Examples
@chapter Examples

@itemize
@item
wol 00:4F:49:07:0B:5F 00:4F:50:06:12:4F

Sends packet addressed to 255.255.255.255:40000 and is intended to wake up
hardware address 00:4F:49:07:0B:5F and 00:4F:50:06:12:4F.


@item
wol -i 192.168.3.255 -p 69 00:4F:49:07:0B:5F 

Sends packet addressed to 192.168.3.255:69 and is intended to wake up hardware
address 00:4F:49:07:0B:5F.


@item
wol --passwd=09-e6-f5-f3-dc-4e 00:4F:49:07:0B:5F

Sends packet addressed to 255.255.255.255:40000 with SecureON password
09-e6-f5-f3-dc-4e.


@item
wol -f /etc/ethers

Read hardware address and corresponding ip address from file /etc/ethers.

File looks like:

@example
Hardware-Address  IP-Address:Port
Hardware-Address  IP-Address
# Comment
Hardware-Address  IP-Address:Port	SecureON-Password
@end example
@end itemize


@bye
